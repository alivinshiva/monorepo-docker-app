# # here we will write yml to deploy our backend service to production using github actions.
# # steps
# # build the docker image
# # push the docker image to docker hub
# # deploy the docker image to production server using ssh




name: CD Backend
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy monorepo-be to ec2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push to docker hub
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/dockerfile.be
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
          push: true
          tags: alivinshiva/monorepo-be:${{ github.sha }}

#  deploy to vm /ec2 instance
      - name: Deploy to vm
        run: |
          echo "${{ secrets.SSH_PVT_KEY }}" > ~/ssh_key
          chmod 600 ~/ssh_key

          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOST }}" > ~/.ssh/known_hosts

          ssh -i ~/ssh_key -o StrictHostKeyChecking=no ubuntu@3.110.210.2 << 'EOF'
            sudo docker pull alivinshiva/monorepo-be:${{ github.sha }}
            sudo docker stop monorepo-be || true
            sudo docker rm monorepo-be || true
            sudo docker run -d -p 8080:8080 --name monorepo-be alivinshiva/monorepo-be:${{ github.sha }}




# more fast and optimize d way to deploy using ssh action

# name: CD Backend

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     name: Deploy monorepo-be to EC2

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./docker/dockerfile.be
#           build-args: |
#             DATABASE_URL=${{ secrets.DATABASE_URL }}
#           push: true
#           tags: |
#             alivinshiva/monorepo-be:latest
#             alivinshiva/monorepo-be:${{ github.sha }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#       - name: Deploy to EC2
#         run: |
#           echo "${{ secrets.SSH_PVT_KEY }}" > ~/ssh_key
#           chmod 600 ~/ssh_key

#           mkdir -p ~/.ssh
#           echo "${{ secrets.KNOWN_HOST }}" > ~/.ssh/known_hosts

#           ssh -i ~/ssh_key -o StrictHostKeyChecking=no ubuntu@3.7.73.221 << 'EOF'
#             set -e
#             echo "ðŸ›‘ Stopping old container..."
#             docker stop monorepo-be || true
#             docker rm monorepo-be || true

#             echo "ðŸ“¦ Pulling latest image..."
#             docker pull alivinshiva/monorepo-be:latest

#             echo "ðŸš€ Running container..."
#             docker run -d \
#               -p 8080:8080 \
#               --name monorepo-be \
#               --restart always \
#               -e DATABASE_URL='${{ secrets.DATABASE_URL }}' \
#               alivinshiva/monorepo-be:latest

#             echo "âœ… Deployment successful!"
#             docker ps | grep monorepo-be
#           EOF
